# Basic usage and installation:

Ensure that both google test and fftw is installed

$ $HW4/ex_inputs/

$ mkdir build && cd build && ccmake ..
$ make

Confirm proper installation by running the following tests:

$ ./test_fft
$ ./test_heat_equation
$ ./test_kepler

To generate a set of initial data a python script 'generate_heatequation.py' is provided

$ $HW4/generate_heatequation.py <resolution> <heat radius> <output file>

To run the code execute the following:

$ mkdir dumps
$ $HW4/src/build/particles <n timesteps> <dump freq> <input file> material_point <delt>

To visualize the output run the following steps:
(A basic familiarity with paraview is assumed)

1) Launch paraview (tested on 5.4.1)
2) open $MYDIR/dumps/steps-..csv
3) Remove the ',' field delimeter and deselect 'Have Headers'
4) Add the filter 'Table to Points'
5) Make the X Column Field 0, Y column Field 1, and select '2D Points'
6) Change coloring from 'Solid Color' to 'Field 2'
7) <Optional> Play with the 'Point Size', and colour settings as-needed
8) <Optional> If you change the input you may need to reload the files or add new ones..
   This can be done by right clicking the step-..csv properties icon, and clicking
   'Find new files' then repeating with 'Reload existing file(s)'

You may also use the predefined paraview state file found at:

  $HW4/ex_inputs/paraviewer.pvsm

1) launch paraview
2) use the 'load state' option
3) you will then be prompted as to which data you would like to select

There are example scripts with sensible defaults available at:

$ $HW4/ex_inputs/

./gen_highresolution_radial.sh generates a high resolution (128) NxN grid of radial heat
./run_particles.sh runs a high resolution input file
